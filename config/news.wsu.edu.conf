################################################################
# news.wsu.edu nginx configuration

# Requests for www should redirect to the HTTPS version without www.
server {
    server_name    www.news.wsu.edu;
    return 301     https://news.wsu.edu$request_uri;
}

# Requests for any announcements.wsu domain should route to the
# announcements page on news.wsu over HTTPS.
server {
    server_name   announcements.wsu.edu *.announcements.wsu.edu;
    return 301    https://news.wsu.edu/announcements/;
}

# HTTP requests on port 80 should be redirected to HTTPS.
server {
	listen  80;
	server_name    news.wsu.edu;
	return 301     https://news.wsu.edu$request_uri;
}

# Handle all HTTPS requests at news.wsu.edu.
server {
	listen         443 ssl spdy;
	server_name    news.wsu.edu;
	root           /var/www/news.wsu.edu/wordpress;

	# Enable SSL
	ssl                    on;
	ssl_certificate        /etc/nginx/ssl/news.wsu.edu.cer;
	ssl_certificate_key    /etc/nginx/ssl/news.wsu.edu.key;

	# Pick the allowed protocols
	ssl_protocols                TLSv1 TLSv1.1 TLSv1.2;

	# Configure perfect forward secrecy
	ssl_prefer_server_ciphers    on;
	ssl_ciphers                  ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
	ssl_dhparam                  /etc/nginx/ssl/dhparam.1024.pem;

	# Set up a session cache for SSL resume
	ssl_session_cache      shared:SSL:10m;
	ssl_session_timeout    10m;

	# Do not overflow the SSL send buffer (causes extra round trips)
	ssl_buffer_size    8k;

	# Compress the SSL headers
	spdy_headers_comp    6;

	# Add SSL stapling
	# ssl_stapling    on;
	# resolver        134.121.139.10;

	# Announce the SPDY alternate protocal
	add_header    Alternate-Protocol 443:npn-spdy/3,443:npn-spdy/2;

	# Enable HTTP Strict Transport Security (HSTS)
	add_header    Strict-Transport-Security "max-age=31536000; includeSubdomains;";

    # Enables the Vary: Accept-Encoding header for gzipped content.
    gzip_vary on;

    # Enable the nginx pagespeed module.
    pagespeed on;

    # Provide a writeable path for cache to be stored
    # @todo - consider memory rather than filesystem
    pagespeed FileCachePath /var/ngx_pagespeed_cache;

    # Enable the tracking and logging of statistics. See
    # location blocks below for accessing data.
    pagespeed Statistics on;
    pagespeed StatisticsLogging on;
    pagespeed LogDir /var/log/pagespeed;

    # Allow pagespeed to use our memcached server.
    # pagespeed MemcachedServers "127.0.0.1:11211";

    # Allow pagespeed to rewrite resources from images.wsu.edu
    pagespeed Domain repo.wsu.edu;

    # Disable pagespeed for feed requests, as XML may not be handled properly.
    pagespeed Disallow "*/feed/*";

    # Ensure requests for pagespeed optimized resources go to the pagespeed
    # handler and no extraneous headers get set.
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
        add_header "" "";
    }

    location ~ "^/ngx_pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }

    # Location blocks for viewing data.
    #
    # Only allow all in development.
    location /ngx_pagespeed_statistics { allow 134.121.9.122; deny all; }
    location /ngx_pagespeed_global_statistics { allow 134.121.9.122; deny all; }
    location /ngx_pagespeed_message { allow 134.121.9.122; deny all; }
    location /pagespeed_console { allow 134.121.9.122; deny all; }

    location / {
        index index.php;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # Serve static assets under wp-content directly. Because wp-content
    # is one level up, we pass the requested data as an alias.
    location ~* ^(/wp-content/)(.*)(\.js|css|png|jpg|jpeg|gif|json|ico)$ {
        expires 7d;
        alias /var/www/news.wsu.edu$1$2$3;
    }

    # Serve static assets under wp-content directly. Because wp-content
    # is one level up, we pass the requested data as an alias.
    location ~* ^(/Content/)(.*)(\.js|css|png|jpg|jpeg|gif|ico)$ {
        expires 365d;
        alias /var/www/news.wsu.edu$1$2$3;
    }

    # Serve the favicon from this domain.
    location ~ ^/favicon.ico$ {
        expires 30d;
        alias /var/www/news.wsu.edu/favicon.ico;
    }

    location ~ ^/Content/(.*)$ {
        alias /var/www/news.wsu.edu/Content/$1;
    }

    location ~ ^/wp-content/(.*)$ {
        alias /var/www/news.wsu.edu/wp-content/$1;
    }

    # Handle all static assets by serving the file directly. Add directives
    # to send expires headers and turn off 404 error logging.
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 7d;
    }

    # this prevents hidden files (beginning with a period) from being served
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Via https://github.com/h5bp/server-configs-nginx/
    #
    # Prevent a variety of file extensions associated with backups and configs
    # from being served.
        location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    location ~ \.php$ {
        client_max_body_size 50M;
        try_files      $uri =404;

        # Include the fastcgi_params defaults provided by nginx
        include        /etc/nginx/fastcgi_params;
        fastcgi_read_timeout 30s;

        # SCRIPT_FILENAME is a required parameter for things to work properly,
        # but was missing in the default fastcgi_params on upgrade to nginx 1.4.
        # We define it here to be sure that it exists.
        fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

        # Use the upstream for php5-fpm that we defined in nginx.conf
        fastcgi_pass   php;

        # And get to serving the file!
        fastcgi_index  index.php;
    }
}
